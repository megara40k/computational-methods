#include <iostream>
#include <iomanip>
#include <fstream>
using namespace std;
ifstream in("input1.txt", ios::in);

int main()
{
    setlocale(LC_ALL, "Russian");
    int n = 0;
    in >> n;

    double** A = new double* [n];
    double** U = new double* [n];

    double** A_k = new double* [n];
    double* w = new double[n];
    double* x = new double[n];

    for (int i = 0; i < n; i++) 
    {
        A[i] = new double[n + 1];
        A_k[i] = new double[n + 1];
        U[i] = new double[n];

        for (int j = 0; j < (n + 1); j++) 
        {
            in >> A[i][j];
            A_k[i][j] = 0;
            if (j != n) U[i][j] = 0;
        }
    }


    double Modul = 0;
    double p = 0;

    //k-ый шаг
    for (int k = 0; k < (n - 1); k++) 
    {

        Modul = 0; //Ищем модуль S

        for (int i = k; i < n; i++) 
        {

            Modul += A[i][k] * A[i][k];
        }

        Modul = sqrt(Modul);
        if (A[k][k] < 0) 
        {
            Modul = -Modul;
        }
        //Нашли

        p = sqrt(2 * Modul * Modul + 2 * Modul * A[k][k]);


        for (int i = 0; i < n; i++)
        {
            if (i < k) 
            {
                w[i] = 0;
            }
            else 
            {
                if (i == k) 
                {
                    w[i] = (A[k][k] + Modul) / p;

                }
                else {
                    w[i] = A[i][k] / p; //Нашли w по определению
                }
            }
        }

        for (int i = 0; i < n; i++) 
        { //Ищем U
            for (int j = 0; j < n; j++)
                U[i][j] = -2 * w[i] * w[j] + (i == j);
        }

        for (int i = 0; i < n; i++) 
        { //A k-тая

            for (int j = 0; j < n + 1; j++) 
            {

                A_k[i][j] = 0;

                for (int l = 0; l < n; l++) {

                    A_k[i][j] += U[i][l] * A[l][j];
                }

            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < (n + 1); j++) {
                A[i][j] = A_k[i][j];
            }
        }
    }




    for (int i = (n - 1); i >= 0; i--) //обратный ход методом Гаусса
    { 

        x[i] = A[i][n];
        for (int j = (i + 1); j < n; j++) 
        {
            x[i] = x[i] - x[j] * A[i][j];
        }
        x[i] = x[i] / A[i][i];
    }

    cout << "Ответ выглядит так: " << endl;

    for (int i = 0; i < n; i++) {
        cout << fixed << setprecision(8) << " X(" << i << ") = " << x[i] << endl;
    }

}
